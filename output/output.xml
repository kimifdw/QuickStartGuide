<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.7.2 on darwin)" generated="20190110 10:40:52.067" rpa="false">
<suite id="s1" name="QuickStart" source="/Users/kimiyu/Project/gitProject/learn-autotest-tips/quick-start/QuickStartGuide/QuickStart.rst">
<kw name="Clear login database" type="setup">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.097" level="INFO" html="yes">File '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20190110 10:40:52.097" endtime="20190110 10:40:52.097"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.097" endtime="20190110 10:40:52.097"></status>
</kw>
<test id="s1-t1" name="User can create an account and log in">
<kw name="Create valid user">
<arguments>
<arg>fred</arg>
<arg>P4ssw0rd</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.098" endtime="20190110 10:40:52.147"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.147" endtime="20190110 10:40:52.148"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.098" endtime="20190110 10:40:52.148"></status>
</kw>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>fred</arg>
<arg>P3ssw0rd</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.148" endtime="20190110 10:40:52.196"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<msg timestamp="20190110 10:40:52.197" level="FAIL">Expected status to be 'Logged In' but was 'Access Denied'.</msg>
<status status="FAIL" starttime="20190110 10:40:52.197" endtime="20190110 10:40:52.198"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.199" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:40:52.198" endtime="20190110 10:40:52.199"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.198" endtime="20190110 10:40:52.199"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20190110 10:40:52.097" endtime="20190110 10:40:52.199" critical="yes">Expected status to be 'Logged In' but was 'Access Denied'.</status>
</test>
<test id="s1-t2" name="User cannot log in with bad password">
<kw name="Create valid user">
<arguments>
<arg>betty</arg>
<arg>P4ssw0rd</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.200" endtime="20190110 10:40:52.254"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.254" endtime="20190110 10:40:52.255"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.200" endtime="20190110 10:40:52.255"></status>
</kw>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>betty</arg>
<arg>wrong</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.255" endtime="20190110 10:40:52.308"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Access Denied</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.308" endtime="20190110 10:40:52.309"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.310" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:40:52.309" endtime="20190110 10:40:52.310"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.309" endtime="20190110 10:40:52.310"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:40:52.199" endtime="20190110 10:40:52.310" critical="yes"></status>
</test>
<test id="s1-t3" name="User can change password">
<kw name="Given a user has a valid account">
<kw name="Create valid user">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.312" endtime="20190110 10:40:52.361"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.361" endtime="20190110 10:40:52.362"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.311" endtime="20190110 10:40:52.362"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.311" endtime="20190110 10:40:52.362"></status>
</kw>
<kw name="When she changes her password">
<kw name="Change Password" library="LoginLibrary">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>${NEW PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.363" endtime="20190110 10:40:52.413"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.413" endtime="20190110 10:40:52.414"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.362" endtime="20190110 10:40:52.414"></status>
</kw>
<kw name="Then she can log in with the new password">
<kw name="Login">
<arguments>
<arg>${USERNAME}</arg>
<arg>${NEW PASSWORD}</arg>
</arguments>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.415" endtime="20190110 10:40:52.465"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.466" endtime="20190110 10:40:52.466"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.415" endtime="20190110 10:40:52.466"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.414" endtime="20190110 10:40:52.467"></status>
</kw>
<kw name="And she cannot use the old password anymore">
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.467" endtime="20190110 10:40:52.519"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Access Denied</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.520" endtime="20190110 10:40:52.520"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.467" endtime="20190110 10:40:52.520"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.522" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:40:52.521" endtime="20190110 10:40:52.522"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.521" endtime="20190110 10:40:52.522"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:40:52.310" endtime="20190110 10:40:52.522" critical="yes"></status>
</test>
<test id="s1-t4" name="Invalid password">
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD5</arg>
<arg>${PWD INVALID LENGTH}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.523" endtime="20190110 10:40:52.573"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.574" endtime="20190110 10:40:52.574"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.523" endtime="20190110 10:40:52.574"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD567890123</arg>
<arg>${PWD INVALID LENGTH}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.575" endtime="20190110 10:40:52.624"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.625" endtime="20190110 10:40:52.625"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.575" endtime="20190110 10:40:52.625"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>123DEFG</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.626" endtime="20190110 10:40:52.674"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.674" endtime="20190110 10:40:52.675"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.625" endtime="20190110 10:40:52.675"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abcd56789</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.675" endtime="20190110 10:40:52.722"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.723" endtime="20190110 10:40:52.723"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.675" endtime="20190110 10:40:52.724"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>AbCdEfGh</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.724" endtime="20190110 10:40:52.771"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.772" endtime="20190110 10:40:52.772"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.724" endtime="20190110 10:40:52.773"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD56+</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.773" endtime="20190110 10:40:52.821"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.821" endtime="20190110 10:40:52.822"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.773" endtime="20190110 10:40:52.822"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.823" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:40:52.823" endtime="20190110 10:40:52.823"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.822" endtime="20190110 10:40:52.823"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:40:52.522" endtime="20190110 10:40:52.823" critical="yes"></status>
</test>
<test id="s1-t5" name="User status is stored in database">
<kw name="Create valid user">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.824" endtime="20190110 10:40:52.875"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.875" endtime="20190110 10:40:52.876"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.824" endtime="20190110 10:40:52.876"></status>
</kw>
<kw name="Database Should Contain">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>Inactive</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20190110 10:40:52.877" level="INFO" html="yes">Getting file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<msg timestamp="20190110 10:40:52.877" level="INFO">${database} = janedoe	J4n3D0e	Inactive
</msg>
<status status="PASS" starttime="20190110 10:40:52.877" endtime="20190110 10:40:52.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${database}</arg>
<arg>${username}\t${password}\t${status}\n</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.877" endtime="20190110 10:40:52.878"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.876" endtime="20190110 10:40:52.878"></status>
</kw>
<kw name="Login">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.878" endtime="20190110 10:40:52.929"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.930" endtime="20190110 10:40:52.930"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.878" endtime="20190110 10:40:52.930"></status>
</kw>
<kw name="Database Should Contain">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>Active</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20190110 10:40:52.932" level="INFO" html="yes">Getting file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<msg timestamp="20190110 10:40:52.932" level="INFO">${database} = janedoe	J4n3D0e	Active
</msg>
<status status="PASS" starttime="20190110 10:40:52.931" endtime="20190110 10:40:52.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${database}</arg>
<arg>${username}\t${password}\t${status}\n</arg>
</arguments>
<status status="PASS" starttime="20190110 10:40:52.932" endtime="20190110 10:40:52.932"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.931" endtime="20190110 10:40:52.932"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:40:52.933" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:40:52.933" endtime="20190110 10:40:52.933"></status>
</kw>
<status status="PASS" starttime="20190110 10:40:52.933" endtime="20190110 10:40:52.933"></status>
</kw>
<tags>
<tag>database</tag>
<tag>quickstart</tag>
<tag>variables</tag>
</tags>
<status status="PASS" starttime="20190110 10:40:52.823" endtime="20190110 10:40:52.933" critical="yes"></status>
</test>
<status status="FAIL" starttime="20190110 10:40:52.068" endtime="20190110 10:40:52.934"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="1">Critical Tests</stat>
<stat pass="4" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">database</stat>
<stat pass="3" fail="1">example</stat>
<stat pass="4" fail="1">quickstart</stat>
<stat pass="3" fail="1">smoke</stat>
<stat pass="1" fail="0">variables</stat>
</tag>
<suite>
<stat pass="4" fail="1" id="s1" name="QuickStart">QuickStart</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190110 10:40:52.064" level="WARN">Automatically parsing other than '*.robot' files is deprecated. Convert '/Users/kimiyu/Project/gitProject/learn-autotest-tips/quick-start/QuickStartGuide/QuickStart.rst' to '*.robot' format or use '--extension' to explicitly configure which files to parse.</msg>
</errors>
</robot>
