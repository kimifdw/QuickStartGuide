<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.7.2 on darwin)" generated="20190110 10:39:48.045" rpa="false">
<suite id="s1" name="QuickStart" source="/Users/kimiyu/Project/gitProject/learn-autotest-tips/quick-start/QuickStartGuide/QuickStart.rst">
<kw name="Clear login database" type="setup">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.078" level="INFO" html="yes">File '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20190110 10:39:48.078" endtime="20190110 10:39:48.078"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.077" endtime="20190110 10:39:48.078"></status>
</kw>
<test id="s1-t1" name="User can create an account and log in">
<kw name="Create valid user">
<arguments>
<arg>fred</arg>
<arg>P4ssw0rd</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.079" endtime="20190110 10:39:48.127"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.128" endtime="20190110 10:39:48.128"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.078" endtime="20190110 10:39:48.128"></status>
</kw>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>fred</arg>
<arg>P3ssw0rd</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.129" endtime="20190110 10:39:48.176"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<msg timestamp="20190110 10:39:48.177" level="FAIL">Expected status to be 'Logged In' but was 'Access Denied'.</msg>
<status status="FAIL" starttime="20190110 10:39:48.177" endtime="20190110 10:39:48.178"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.179" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:39:48.178" endtime="20190110 10:39:48.179"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.178" endtime="20190110 10:39:48.179"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="FAIL" starttime="20190110 10:39:48.078" endtime="20190110 10:39:48.179" critical="yes">Expected status to be 'Logged In' but was 'Access Denied'.</status>
</test>
<test id="s1-t2" name="User cannot log in with bad password">
<kw name="Create valid user">
<arguments>
<arg>betty</arg>
<arg>P4ssw0rd</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.180" endtime="20190110 10:39:48.231"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.231" endtime="20190110 10:39:48.232"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.180" endtime="20190110 10:39:48.232"></status>
</kw>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>betty</arg>
<arg>wrong</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.232" endtime="20190110 10:39:48.284"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Access Denied</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.285" endtime="20190110 10:39:48.285"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.287" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:39:48.286" endtime="20190110 10:39:48.287"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.286" endtime="20190110 10:39:48.287"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:39:48.179" endtime="20190110 10:39:48.287" critical="yes"></status>
</test>
<test id="s1-t3" name="User can change password">
<kw name="Given a user has a valid account">
<kw name="Create valid user">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.288" endtime="20190110 10:39:48.339"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.339" endtime="20190110 10:39:48.340"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.288" endtime="20190110 10:39:48.340"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.288" endtime="20190110 10:39:48.340"></status>
</kw>
<kw name="When she changes her password">
<kw name="Change Password" library="LoginLibrary">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>${NEW PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.341" endtime="20190110 10:39:48.389"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.390" endtime="20190110 10:39:48.390"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.340" endtime="20190110 10:39:48.390"></status>
</kw>
<kw name="Then she can log in with the new password">
<kw name="Login">
<arguments>
<arg>${USERNAME}</arg>
<arg>${NEW PASSWORD}</arg>
</arguments>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.391" endtime="20190110 10:39:48.439"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.439" endtime="20190110 10:39:48.439"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.391" endtime="20190110 10:39:48.440"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.391" endtime="20190110 10:39:48.440"></status>
</kw>
<kw name="And she cannot use the old password anymore">
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.440" endtime="20190110 10:39:48.488"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Access Denied</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.489" endtime="20190110 10:39:48.489"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.440" endtime="20190110 10:39:48.489"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.490" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:39:48.490" endtime="20190110 10:39:48.490"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.490" endtime="20190110 10:39:48.491"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:39:48.287" endtime="20190110 10:39:48.491" critical="yes"></status>
</test>
<test id="s1-t4" name="Invalid password">
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD5</arg>
<arg>${PWD INVALID LENGTH}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.491" endtime="20190110 10:39:48.543"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.543" endtime="20190110 10:39:48.544"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.491" endtime="20190110 10:39:48.544"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD567890123</arg>
<arg>${PWD INVALID LENGTH}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.544" endtime="20190110 10:39:48.596"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.596" endtime="20190110 10:39:48.597"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.544" endtime="20190110 10:39:48.597"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>123DEFG</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.597" endtime="20190110 10:39:48.645"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.645" endtime="20190110 10:39:48.646"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.597" endtime="20190110 10:39:48.646"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abcd56789</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.646" endtime="20190110 10:39:48.692"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.693" endtime="20190110 10:39:48.693"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.646" endtime="20190110 10:39:48.693"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>AbCdEfGh</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.694" endtime="20190110 10:39:48.740"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.741" endtime="20190110 10:39:48.741"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.693" endtime="20190110 10:39:48.741"></status>
</kw>
<kw name="Creating user with invalid password should fail">
<arguments>
<arg>abCD56+</arg>
<arg>${PWD INVALID CONTENT}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>example</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.742" endtime="20190110 10:39:48.788"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Creating user failed: ${error}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.788" endtime="20190110 10:39:48.789"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.741" endtime="20190110 10:39:48.789"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.790" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:39:48.790" endtime="20190110 10:39:48.790"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.789" endtime="20190110 10:39:48.790"></status>
</kw>
<tags>
<tag>example</tag>
<tag>quickstart</tag>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20190110 10:39:48.491" endtime="20190110 10:39:48.790" critical="yes"></status>
</test>
<test id="s1-t5" name="User status is stored in database">
<kw name="Create valid user">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Create User" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.791" endtime="20190110 10:39:48.842"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>SUCCESS</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.843" endtime="20190110 10:39:48.843"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.791" endtime="20190110 10:39:48.843"></status>
</kw>
<kw name="Database Should Contain">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>Inactive</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20190110 10:39:48.844" level="INFO" html="yes">Getting file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<msg timestamp="20190110 10:39:48.844" level="INFO">${database} = janedoe	J4n3D0e	Inactive
</msg>
<status status="PASS" starttime="20190110 10:39:48.844" endtime="20190110 10:39:48.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${database}</arg>
<arg>${username}\t${password}\t${status}\n</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.844" endtime="20190110 10:39:48.845"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.843" endtime="20190110 10:39:48.845"></status>
</kw>
<kw name="Login">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<kw name="Attempt To Login With Credentials" library="LoginLibrary">
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.845" endtime="20190110 10:39:48.895"></status>
</kw>
<kw name="Status Should Be" library="LoginLibrary">
<arguments>
<arg>Logged In</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.895" endtime="20190110 10:39:48.896"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.845" endtime="20190110 10:39:48.896"></status>
</kw>
<kw name="Database Should Contain">
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<arg>Active</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20190110 10:39:48.897" level="INFO" html="yes">Getting file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<msg timestamp="20190110 10:39:48.897" level="INFO">${database} = janedoe	J4n3D0e	Active
</msg>
<status status="PASS" starttime="20190110 10:39:48.897" endtime="20190110 10:39:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${database}</arg>
<arg>${username}\t${password}\t${status}\n</arg>
</arguments>
<status status="PASS" starttime="20190110 10:39:48.898" endtime="20190110 10:39:48.898"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.896" endtime="20190110 10:39:48.898"></status>
</kw>
<kw name="Clear login database" type="teardown">
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${DATABASE FILE}</arg>
</arguments>
<msg timestamp="20190110 10:39:48.899" level="INFO" html="yes">Removed file '&lt;a href="file:///var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt"&gt;/var/folders/f6/lh8p_50n47z33tzbh02m0p5c0000gp/T/robotframework-quickstart-db.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20190110 10:39:48.898" endtime="20190110 10:39:48.899"></status>
</kw>
<status status="PASS" starttime="20190110 10:39:48.898" endtime="20190110 10:39:48.899"></status>
</kw>
<tags>
<tag>database</tag>
<tag>quickstart</tag>
<tag>variables</tag>
</tags>
<status status="PASS" starttime="20190110 10:39:48.790" endtime="20190110 10:39:48.899" critical="yes"></status>
</test>
<status status="FAIL" starttime="20190110 10:39:48.047" endtime="20190110 10:39:48.900"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="1">Critical Tests</stat>
<stat pass="4" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">database</stat>
<stat pass="3" fail="1">example</stat>
<stat pass="4" fail="1">quickstart</stat>
<stat pass="3" fail="1">smoke</stat>
<stat pass="1" fail="0">variables</stat>
</tag>
<suite>
<stat pass="4" fail="1" id="s1" name="QuickStart">QuickStart</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190110 10:39:48.043" level="WARN">Automatically parsing other than '*.robot' files is deprecated. Convert '/Users/kimiyu/Project/gitProject/learn-autotest-tips/quick-start/QuickStartGuide/QuickStart.rst' to '*.robot' format or use '--extension' to explicitly configure which files to parse.</msg>
</errors>
</robot>
